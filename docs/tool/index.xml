<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tool on Tech</title><link>https://exaream.dev/tool/</link><description>Recent content in Tool on Tech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>exaream</copyright><lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://exaream.dev/tool/index.xml" rel="self" type="application/rss+xml"/><item><title>localstack</title><link>https://exaream.dev/tool/localstack/</link><pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/localstack/</guid><description>localstack on Mac # Install # % brew install localstack/tap/localstack-cli % localstack start -d __ _______ __ __ / / ____ _________ _/ / ___// /_____ ______/ /__ / / / __ \/ ___/ __ `/ /\__ \/ __/ __ `/ ___/ //_/ / /___/ /_/ / /__/ /_/ / /___/ / /_/ /_/ / /__/ ,&amp;lt; /_____/\____/\___/\__,_/_//____/\__/\__,_/\___/_/|_| 💻 LocalStack CLI 2.2.0 [22:13:25] starting LocalStack in Docker mode 🐳 localstack.</description></item><item><title>PlantUML</title><link>https://exaream.dev/tool/plantuml/</link><pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/plantuml/</guid><description>PlantUML # Install # % brew update % brew doctor Java
% brew install java % echo &amp;#39;export PATH=&amp;#34;/usr/local/opt/openjdk/libexec/openjdk.jdk/Contents/Home/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc % source ~/.zshrc % which java /usr/local/opt/openjdk/libexec/openjdk.jdk/Contents/Home/bin/java % java --version openjdk 20.0.1 2023-04-18 OpenJDK Runtime Environment Homebrew (build 20.0.1) OpenJDK 64-Bit Server VM Homebrew (build 20.0.1, mixed mode, sharing) PlantUML
% brew install plantuml % which plantuml /usr/local/bin/plantuml % plantuml -version PlantUML version 1.2023.10 (Thu Jul 13 00:54:07 JST 2023) (GPL source distribution) Java Runtime: OpenJDK Runtime Environment JVM: OpenJDK 64-Bit Server VM Default Encoding: UTF-8 Language: en Country: JP PLANTUML_LIMIT_SIZE: 4096 Dot version: dot - graphviz version 8.</description></item><item><title>Jenkins</title><link>https://exaream.dev/tool/jenkins/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/jenkins/</guid><description>Jenkins # Install # Docker Compose # How to Install and Run Jenkins With Docker Compose Make docker-compose.yml
https://hub.docker.com/_/jenkins version: &amp;#39;3.8&amp;#39; services: jenkins: container_name: jenkins image: jenkins/jenkins:latest privileged: true ports: - 8080:8080 volumes: - ./jenkins_home:/var/jenkins_home Run the following. $ docker-compose up -d Confirm the admin initial password. $ docker logs jenkins | less ************************************************************* ************************************************************* ************************************************************* Jenkins initial setup is required. An admin user has been created and a password generated.</description></item><item><title>LinkedIn</title><link>https://exaream.dev/tool/linkedin/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/linkedin/</guid><description> LinkedIn # How to export LincedIn contacts # Click My Network at the top. Click on Connections under Manage my network. Click Manage synced and imported contacts. Click Export contacts under Advanced actions. Select Doenload larget data archive including connections, ~.</description></item><item><title>Vagrant</title><link>https://exaream.dev/tool/vagrant/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/vagrant/</guid><description>Vagrant # Basic # start/create
$ vagrant up $ vagrant up sample connect
$ vagrant ssh sample stop
$ vagrant halt sample delete
$ ls -A .vagrant Vagrantfile $ vagrant destroy -f $ rm -rf Vagrantfile .vagrant Uninstall # Remove the Vagrant Program # On macOS:
$ sudo rm -rf /opt/vagrant /usr/local/bin/vagrant $ sudo pkgutil --forget com.vagrant.vagrant On Linux:
$ rm -rf /opt/vagrant $ rm -f /usr/bin/vagrant On Windows:</description></item><item><title>Excel</title><link>https://exaream.dev/tool/excel/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/excel/</guid><description>Excel # 便利 # 重複 # 重複する値のチェック
=IF(COUNTIF($A$1:$B$10,$A2)&amp;gt;=2,&amp;#34;Duplicate&amp;#34;,&amp;#34;-&amp;#34;) 重複なしカウント(セルの範囲内に空白がある場合エラーあり)
=SUMPRODUCT(1/COUNTIF($A$1:$B$10,$A$1:$B$10)) 重複なしカウント(セルの範囲内に空白がある場合もエラーなし)
=SUMPRODUCT(($A$1:$B$10&amp;lt;&amp;gt;&amp;#34;&amp;#34;)/COUNTIF($A$1:$B$10,$A$1:$B$10&amp;amp;&amp;#34;&amp;#34;)) 表示中のセルの合計(非表示のセルを除く) # 109 は固定値
=SUBTOTAL(109,$A$1:$B$10) 検索 # VLOOKUP(検索値,範囲,列位置,FALSE) # e.g.) A1 の値が sample シートの範囲(A1:A10) にある場合 B 列の値を出力
=VLOOKUP(A1,sample!$A$1:$B$10,2,FALSE) 特定の値があるか判定 # =IF(COUNTIF(A1:B10,&amp;#34;aaa&amp;#34;)&amp;gt;0,&amp;#34;Yes&amp;#34;,&amp;#34;No&amp;#34;) 日付・時刻 # 曜日 # e.g.) A1 の日時を日本語の曜日の短縮形で表示。
=TEXT(A1,&amp;#34;aaa&amp;#34;) 第2引数 description aaaa 日本語の曜日 aaa 日本語の曜日の短縮形 dddd 英語の曜日 ddd 英語の曜日の曜日の短縮形 時間の差分 # 時間(差分が24時間未満の場合のみ) # =TEXT(B1-A1,&amp;#34;hh:mm:ss&amp;#34;) 日数 # =DATEDIF(A1,B1,&amp;#34;d&amp;#34;) 週数 # =DATEDIF(A1,B1,&amp;#34;d&amp;#34;)/7 月数 # =DATEDIF(A1,B1,&amp;#34;m&amp;#34;) 年数 # 年齢計算 etc.</description></item><item><title>Hugo</title><link>https://exaream.dev/tool/hugo/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/hugo/</guid><description>Hugo # What&amp;rsquo;s Hugo? # Hugo is a fast and flexible static site generator made of Golang.
https://gohugo.io/about/ Preparation # Create a git repository using GitHub # Repositories &amp;gt; New Repository name: sample Click &amp;ldquo;Create repository&amp;rdquo; Install Hugo on macOS # $ brew install hugo Build a blog using Hugo # $ GITHUB_USERNAME=xxxx $ GIT_REPOSITORY=sample $ hugo new site ${GIT_REPOSITORY} $ cd ${GIT_REPOSITORY} $ echo &amp;#34;# ${GIT_REPOSITORY}&amp;#34; &amp;gt;&amp;gt; README.md Initialize git # $ git init If you want to change the configrations of git</description></item><item><title>MailCatcher</title><link>https://exaream.dev/tool/mailcatcher/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/mailcatcher/</guid><description>MailCatcher # What is MailCatcher? # Simple SMTP server made of Ruby. You can check emails of Web app on your local environment. Overview # This post only explains how to set up MailCatcher container using Docker Compose to check emails sent from a Web app like Laravel. NOTE: This post describes only MailCatcher. Please add what you need. # Directory structure of sample project-dir ├── .git ├── .gitignore ├── docker-compose.</description></item><item><title>VS Code</title><link>https://exaream.dev/tool/vscode/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/tool/vscode/</guid><description>VS Code (Visual Studio Code) # 設定 # 設定を開く # Macの場合：Code &amp;gt; Preferences... &amp;gt; Settings ファイルを常に新しいタブで開く方法 # workbench.editor.enablePreview　を検索しチェックを解除 プロジェクトを常に新しいウィンドウで開く方法 # window.openFoldersInNewWindow を検索し on を選択 code command # How to enable code command # Use shortcut ⇧ ⌘ p (shift + command + p) Select Shell Command: Install command from PATH High use commands # Description Command Start VS Code code Open a directory with VS Code code . Open a file with VS Code code foo.</description></item></channel></rss>