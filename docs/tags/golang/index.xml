<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Tech Blog</title><link>https://exaream.github.io/tech-blog/tags/golang/</link><description>Recent content in Golang on Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>exaream</copyright><lastBuildDate>Sat, 31 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://exaream.github.io/tech-blog/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Memo</title><link>https://exaream.github.io/tech-blog/go/memo/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/go/memo/</guid><description>Go Memo # 組み込み型 # 言語に備わっているため最初から型のこと
型 概要 ゼロ値(初期値) bool 真偽値 false string 文字列 &amp;quot;&amp;quot; int8/int16/int32/int64 整数(符号あり) 0 uint8/uint16/uint32/uint64 整数(符号なし=unsigned) 0 int 整数(符号あり, 32bit以上) 0 uint 整数(符号なし, 32bit以上) 0 byte 整数(uint8 の別名) 0 rune 整数(int32 の別名) 0 uintptr 整数(符号なし, ポインタの値を格納する大きさ) 0 float32/float64 浮動小数点数 0 complex32 複素数(float32の実数部と虚数部を持つ) (0+0i) complex64 複素数(float64の実数部と虚数部を持つ) (0+0i) error エラー nil 変数定義 # // 変数定義と代入が同時 var n int = 100 // 変数定義と代入が別 var n int n = 100 // 型を省略(型推論により自動的に int 型を定義) var n = 100 // var を省略, 関数内でのみ使用可能 n := 100 // まとめて記述する方法 var ( n = 100 m = 200 ) ゼロ値 # ゼロ値とはGoの変数に設定されている初期値のこと。 明示的な初期化をせずに使用可能。 ゼロ値があるため初期化が不要な例 # package main func main() { // ゼロ値 0 のため初期値の設定は不要 // var sum int = 0 var sum int for i := 1; i &amp;lt;= 10; i++ { sum += 1 } println(sum) } package main import ( &amp;#34;fmt&amp;#34; &amp;#34;strings&amp;#34; ) func main() { words := []string{&amp;#34;dog&amp;#34;, &amp;#34;cat&amp;#34;, &amp;#34;dog&amp;#34;, &amp;#34;fish&amp;#34;, &amp;#34;cat&amp;#34;} counts := map[string]int{} for _, word := range words { // ゼロ値 0 のため初期値の設定は不要 counts[word]++ } fmt.</description></item><item><title>Hugo</title><link>https://exaream.github.io/tech-blog/tool/hugo/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/tool/hugo/</guid><description>Hugo # What&amp;rsquo;s Hugo? # Hugo is a fast and flexible static site generator made of Golang.
https://gohugo.io/about/ Preparation # Create a git repository using Github # Repositories &amp;gt; New Repository name: sample Click &amp;ldquo;Create repository&amp;rdquo; Install Hugo on macOS # $ brew install hugo Build a blog using Hugo # $ GITHUB_USERNAME=xxxx $ GIT_REPOSITORY=sample $ hugo new site ${GIT_REPOSITORY} $ cd ${GIT_REPOSITORY} $ echo &amp;#34;# ${GIT_REPOSITORY}&amp;#34; &amp;gt;&amp;gt; README.</description></item></channel></rss>