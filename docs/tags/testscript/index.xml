<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TestScript on Tech</title><link>https://exaream.dev/tags/testscript/</link><description>Recent content in TestScript on Tech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>exaream</copyright><lastBuildDate>Sun, 07 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://exaream.dev/tags/testscript/index.xml" rel="self" type="application/rss+xml"/><item><title>Go TestScript</title><link>https://exaream.dev/go/testscript/</link><pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><guid>https://exaream.dev/go/testscript/</guid><description>Go TestScript # 概要 # TestScript は 元々 Go のコンパイラをテストするために作成されたもの。 ShellScript のように記述でき、ファイルシステム上で動作するものをテストできる。 コンパイル時に使用される TestScript は以下で確認できる。
https://cs.opensource.google/go/go/+/master:src/cmd/go/testdata/script/ txtar (テキストベースのアーカイブ形式) によって表現されている。 Go 内部のテストコードを使用できるよう、再構成されたものが以下で公開されている。
https://github.com/rogpeppe/go-internal/tree/master/testscript 定義済コマンド # テストコードの書き方 # 定義済コマンド一覧 # cd, chmod, cp, env, exec, go, grep, mkdir, mv, rm exists, skip, sleep, stderr, stdout, stop, symlink, wait etc https://cs.opensource.google/go/go/+/release-branch.go1.19:src/cmd/go/script_test.go 定義済コマンドをテストで使用 # testdata/script/sample.txt
exec cat hello.text stdout &amp;#39;hello world\n&amp;#39; ! stderr . -- hello.txt -- hello world sample_test.go
package sample_test import &amp;#34;github.</description></item></channel></rss>