<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL on Tech</title><link>https://exaream.dev/tags/sql/</link><description>Recent content in SQL on Tech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>exaream</copyright><lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://exaream.dev/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL</title><link>https://exaream.dev/mysql/basic/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/mysql/basic/</guid><description>MySQL Basic # Preparation # Install to macOS # $ brew install mysql Start # $ mysql.server start Starting MySQL ....... SUCCESS! Check the vertion # $ mysql --version mysql Ver 8.0.26 for macos11.3 on x86_64 (Homebrew) Make initial settings # $ mysql_secure_installation パスワード強度検証プラグインの利用有無 パスワード強度の選択 root ユーザーのパスワード設定 匿名ユーザーの削除 リモートからの root ユーザーとしてのログインの禁止 サンプル用 test データベースの削除 $ mysql_secure_installation Securing the MySQL server deployment. Connecting to MySQL using a blank password. VALIDATE PASSWORD COMPONENT can be used to test passwords and improve security.</description></item><item><title>PostgreSQL Basic</title><link>https://exaream.dev/postgresql/basic/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/postgresql/basic/</guid><description>PostgreSQL Basic # psql command # Usage # psql [OPTION]... [DBNAME [USERNAME]] Access DB
$ psql -h sample_hostname -p sample_portnumber -U sampleuser sample_db Run SQL
$ psql --file=/path/to/sample.sql Options # option short description -h --host=HOSTNAME database server host or socket directory (default: &amp;ldquo;local socket&amp;rdquo;) -p --port=PORT database server port (default: &amp;ldquo;5432&amp;rdquo;) -U --username=USERNAME database user name (default: &amp;ldquo;root&amp;rdquo;) -w --no-password never prompt for password -W --password force password prompt (should happen automatically) -c --command=COMMAND run only single command (SQL or internal) and exit -d --dbname=DBNAME database name to connect to (default: &amp;ldquo;root&amp;rdquo;) -f --file=FILENAME execute commands from file, then exit -l --list list available databases, then exit -v --set=, --variable=NAME=VALUE set psql variable NAME to VALUE</description></item></channel></rss>