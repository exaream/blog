<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Tech</title><link>https://exaream.dev/git/</link><description>Recent content in Git on Tech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>exaream</copyright><lastBuildDate>Sun, 19 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://exaream.dev/git/index.xml" rel="self" type="application/rss+xml"/><item><title>gh</title><link>https://exaream.dev/git/gh/</link><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid>https://exaream.dev/git/gh/</guid><description>gh # gh is the official command-line tool for GitHub. It provides an easy-to-use interface for managing pull requests, issues, repositories, and more.
Install # macOS # % brew install gh Log in # Get new token on GitHub # Access https://github.com/settings/tokens Click Generate new token &amp;gt; Generate new token (classic) Fill in some fields in a form (enter any name in Note) Click Generate new token Copy new token Log in on the terminal # # Login to Github % gh auth login ?</description></item><item><title>ghq</title><link>https://exaream.dev/git/ghq/</link><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid>https://exaream.dev/git/ghq/</guid><description> ghq # ghq is a command-line tool for managing local clones of Git repositories.
Install ghq # % brew install ghq Configure # % ghq root /path/to/your/dir/ % git config --global ghq.root /path/to/your/dir/ How to use ghq command # List repositories
ghq list Clone a repository
ghq get github.com/foo/bar Delete a repository
ghq delete github.com/foo/bar</description></item><item><title>Multiple GitHub Account on 1 PC</title><link>https://exaream.dev/git/multiple-github-account/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://exaream.dev/git/multiple-github-account/</guid><description>複数のGitHubアカウントを1つのPCで使用 # 概要 # 複数のGitHubアカウントを1つのPC内で自動的に切り分ける方法を説明 以下のディレクトリ account1 と　account2 に異なるGitHubアカウントを設定 ディレクトリ構成
~/source └── github ├── account1 │ ├── repository1 │ └── repository2 └── account2 ├── repository3 └── repository4 1. 公開鍵と秘密鍵を作成 # まず account1 用の公開鍵と秘密鍵を作成 ssh-keygen のオプション # option 説明 備考 -t 鍵の暗号化方式 今回は強度の高い ed25519 を選択 -P パスワード 今回は空を指定 -C 任意のコメント 今回はGitHubのメールアドレスを指定 -f 出力するファイル名 今回は id_暗号化方式_任意の識別子 を指定 ssh-keygen で作成 # 内容
$ cd ~/.ssh $ ssh-keygen -t [暗号化方式] -P &amp;#39;&amp;#39; -C [追加するアカウントのメール] -f [秘密鍵のファイル名] 実例</description></item><item><title>Git Basic</title><link>https://exaream.dev/git/basic/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/git/basic/</guid><description>Git Basic # 実用的なコマンド # 頻繁に使うコマンド # $ git branch -a $ git checkout -b sample_branch_name # Edit source code $ git status $ git add . $ git commit -m &amp;#34;message&amp;#34; $ git push origin sample_branch_name git tag sample_tag_name git tag -n git push origin sample_tag_name 指定したフォーマットでコミット・ログを表示 # $ git log --graph --date=iso --pretty=format:&amp;#34;[%ad] %h %an : %s&amp;#34; 特定の注釈を含むコミットを検索 # $ git log --oneline --grep &amp;#34;&amp;lt;pattern&amp;gt;&amp;#34; コミット間の変更ファイル一覧を表示 # $ git diff --stat &amp;lt;Commit A&amp;gt; &amp;lt;Commit B&amp;gt; ファイル名のみ表示する場合</description></item><item><title>Git Tool</title><link>https://exaream.dev/git/tool/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.dev/git/tool/</guid><description>Git Tool # git-secrets # git-secrets scans a git repository, finds credential information and prevents them from being committed. References # https://github.com/awslabs/git-secrets https://blog.katsubemakito.net/git/git-secrets Install # macOS
$ brew install git-secrets $ git clone https://github.com/awslabs/git-secrets.git $ cd git-secrets $ make install Basic usage # Set git-secrets to a git repository
$ git init $ git secrets --install Check commit history
$ git secrets --scan-history For AWS
$ git secrets --register-aws git-split-diffs # Display the results of the git diff command side by side like GitHub.</description></item></channel></rss>