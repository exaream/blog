<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memo on Tech Blog</title><link>https://exaream.github.io/tech-blog/tags/memo/</link><description>Recent content in Memo on Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>exaream</copyright><lastBuildDate>Sat, 31 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://exaream.github.io/tech-blog/tags/memo/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Memo</title><link>https://exaream.github.io/tech-blog/go/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/go/</guid><description>Go Memo # コンパイル, バイナリ # コンパイルして実行 # バイナリ（実行可能ファイル）の生成なし
$ go run main.go $ go run . $ go run pkgname コンパイルしてバイナリを生成 # バイナリ（実行可能ファイル）の生成あり
$ go build main.go $ go build . $ go build pkgname 静的解析によるミスの検出 # バグと思われるミスを検出 # go test 実行時に自動で実行される The Go Playground でも実行される
$ go vet main.go $ go vet . $ go vet pkgname エラー処理のミスを検出 # $ go get github.</description></item><item><title>Python Memo</title><link>https://exaream.github.io/tech-blog/python/memo/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/python/memo/</guid><description>Python Memo # Version # Terminal # $ python --version Python 3.9.6 Short option of --version
$ python -V Python 3.9.6 More detailed information
$ python -VV Python 3.9.6 (default, Jul 22 2021, 15:16:20) [GCC 8.3.0] Source code # sys # import sys print(sys.version) # 3.9.6 (default, Jul 22 2021, 15:16:20) # [GCC 8.3.0] print(type(sys.version)) # &amp;lt;class &amp;#39;str&amp;#39;&amp;gt; print(sys.version_info) # sys.version_info(major=3, minor=9, micro=6, releaselevel=&amp;#39;final&amp;#39;, serial=0) print(type(sys.</description></item><item><title>Git</title><link>https://exaream.github.io/tech-blog/git/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/git/</guid><description>Git Memo # 実用的なコマンド # 指定したフォーマットでコミット・ログを表示 # $ git log --graph --date=iso --pretty=format:&amp;#34;[%ad] %h %an : %s&amp;#34; 特定の注釈を含むコミットを検索 # $ git log --oneline --grep &amp;#34;&amp;lt;pattern&amp;gt;&amp;#34; コミット間の変更ファイル一覧を表示 # $ git diff --stat &amp;lt;Commit A&amp;gt; &amp;lt;Commit B&amp;gt; ファイル名のみ表示する場合
$ git diff --stat --name-only &amp;lt;Commit A&amp;gt; &amp;lt;Commit B&amp;gt; タグの一覧を表示 # $ git tag -n Git 設定 # バージョンを確認 # $ git --version 設定の一覧を表示 # 設定適用範囲</description></item><item><title>Linux</title><link>https://exaream.github.io/tech-blog/linux/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/linux/</guid><description>Linux Memo # 画面操作 # ターミナル操作のショートカット # Mac Windows description control + a ctrl + a カーソルを行頭へ移動 control + e ctrl + e カーソルを行末へ移動 control + f ctrl + f カーソルを前進(右へ移動) control + b ctrl + b カーソルを後退(左へ移動) control + d ctrl + d カーソル上の1文字削除 control + h ctrl + h カーソル後方(左)の1文字削除 control + u ctrl + u カーソルから行頭まで削除 control + k ctrl + k カーソルから行末まで削除 control + w ctrl + w カーソル上の単語1つ分削除 control + y ctrl + y 最後に削除した文字を貼り付け control + p ctrl + p 1つ前のコマンド履歴を表示 control + n ctrl + n 1つ後のコマンド履歴を表示 control + s ctrl + s 画面をロック control + q ctrl + q 画面のロックを解除 control + c ctrl + c 実行中のコマンドを強制終了 control + l(エル) ctrl + l(エル) 画面をクリア tab tab コマンド,ディレクトリ,ファイルの候補を補完 文字コード # 文字コードの値 # 文字コード コマンドで指定する値 remarks Shift_JIS cp932 or sjis cp932 には sjis に含まれていない文字（①, ②, Ⅰ, Ⅱ, ㍉, ㌍, 彅, 髙 etc.</description></item><item><title>MySQL</title><link>https://exaream.github.io/tech-blog/mysql/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/mysql/</guid><description>MySQL Memo # Preparation # Install to macOS # $ brew install mysql Start # $ mysql.server start Starting MySQL ....... SUCCESS! Check the vertion # $ mysql --version mysql Ver 8.0.26 for macos11.3 on x86_64 (Homebrew) Make initial settings # $ mysql_secure_installation パスワード強度検証プラグインの利用有無 パスワード強度の選択 root ユーザのパスワード設定 匿名ユーザの削除 リモートからの root ユーザとしてのログインの禁止 サンプル用 test データベースの削除 $ mysql_secure_installation Securing the MySQL server deployment. Connecting to MySQL using a blank password.</description></item><item><title>PostgreSQL</title><link>https://exaream.github.io/tech-blog/postgresql/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/postgresql/</guid><description>PostgreSQL Memo # PostgreSQL&amp;rsquo;s Information # Table Schema # SELECT col.table_name, col.ordinal_position, -- No. col.column_name, col.data_type, col.character_maximum_length, -- 文字数(文字列型) col.character_octet_length, -- バイト数(文字列型) col.numeric_precision, -- 桁数(数値型) col.numeric_scale, -- 小数部(数値型) col.datetime_precision, -- ミリ秒以下(日付型) col.interval_type, -- インターバルの単位(日付型) col.is_nullable, -- NULLを許可するか否か col.column_default -- 初期値 FROM information_schema.columns col WHERE col.table_name = &amp;#39;sample_table&amp;#39; -- 対象テーブル名を指定 ORDER BY col.table_name, col.ordinal_position</description></item></channel></rss>