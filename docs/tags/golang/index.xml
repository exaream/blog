<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on Tech Blog</title><link>https://exaream.github.io/tech-blog/tags/golang/</link><description>Recent content in Golang on Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>exaream</copyright><lastBuildDate>Sat, 31 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://exaream.github.io/tech-blog/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Memo</title><link>https://exaream.github.io/tech-blog/go/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/go/</guid><description>Go Memo # macOS でパスを通す方法 # echo &amp;#34;export GOPATH=$HOME/go&amp;#34; &amp;gt;&amp;gt; ~/.bash_profile echo &amp;#34;export PATH=$PATH:$GOPATH/bin&amp;#34; &amp;gt;&amp;gt; ~/.bash_profile source ~/.bash_profile コンパイル, バイナリ # コンパイルして実行 # バイナリ（実行可能ファイル）の生成なし
$ go run main.go $ go run . $ go run pkgname コンパイルしてバイナリを生成 # バイナリ（実行可能ファイル）の生成あり
$ go build main.go $ go build . $ go build pkgname 静的解析によるミスの検出 # バグと思われるミスを検出 # go test 実行時に自動で実行される The Go Playground でも実行される
$ go vet main.</description></item><item><title>Hugo</title><link>https://exaream.github.io/tech-blog/tool/hugo/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://exaream.github.io/tech-blog/tool/hugo/</guid><description>Hugo # What&amp;rsquo;s Hugo? # Hugo is a fast and flexible static site generator made of Golang.
https://gohugo.io/about/ Preparation # Create a git repository using Github # Repositories &amp;gt; New Repository name: sample Click &amp;ldquo;Create repository&amp;rdquo; Install Hugo on macOS # $ brew install hugo Build a blog using Hugo # $ GITHUB_USERNAME=xxxx $ GIT_REPOSITORY=sample $ hugo new site ${GIT_REPOSITORY} $ cd ${GIT_REPOSITORY} $ echo &amp;#34;# ${GIT_REPOSITORY}&amp;#34; &amp;gt;&amp;gt; README.</description></item></channel></rss>